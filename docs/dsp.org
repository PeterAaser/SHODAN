* Rewritten from the circus of shit that is the DSP wiki
** STG overview
   [[file:img/mcs_overview.png]]

   An STG consists of the following:
   + 60 electrode channels
   + 3 DAC pairs
   + 3 Sidebands
   + 3 Trigger statemachines

   TODO This is incomprehensible, Fix after doing the last part.
   The trigger statemachines control the
   Within each module, the three DAC pairs and three sideband
   channels can be arbitrary controlled by three trigger statemachines. These
   statemachines handle the stimulus pattern read out units (DAC/SBS) to whom they
   are assigned to (reg:0x104­0x108). The stimulus pattern is stored in onboard
   memory on the MEA2100 headstage where each module has its own independent
   memory. For the stimulation (DAC/SBS) the memory is organized in segments and
   blocks to support the stimulus with different stimulus pattern lists, to enable
   quick switching between lists of prepared patterns. The DACs update their output
   value every 20 us, resulting in an output rate of 50 kHz. Corresponding for the
   analog patterns, additional information is stored in memory regions called
   sidebands. These sideband data contain digital information for controling the
   switches and muxes to enable stimulation. The update of this data is also every
   20 us.

   The electrical parameters are:
   + Voltage Mode
     * Range: +- 12 V
     * Resolution: 0.571 mV per digit
   + Current Mode:
     * Range: +- 1.5 mA,
     * Resolution: 0.05 µA per digit

   The configuration of the Stimulus Generator consists of three parts:

   + Stimulus pattern upload
   + Electrode configuration
   + Trigger setup

   remove?
   The configuration of the Direct Streaming mode can be done in two ways:
   When controled by Computer SW via DSP
   When fully controled by DSP Stimulus

** Pattern Upload

   [[file:img/mcs_stim_mem.png]]

   The patterns used to stimulate electrodes is held in the stimulus memory as
   shown in the figure.
   This data is read by 8 stimulus pattern readout units, however in default
   configuration only 6 of them are in use: One for each sideband, and one for
   each DAC.

   The memory is divided into segments of blocks. Only the base case with one
   segment will be considered for now. Setup is handled by writing to the memory
   control register.

   After setting up the memory data is written by using the DAC and SBS write
   registers at 0x9F20 - 0x9F3C.
   Writing to these registers appends data to the corresponding block, take
   care not to write more data than each block has allocated.

   Interesting registers:
   + 0x9200 - 0x9200 ... - 0x92E0
     Segment selector
   + 0x9F20 - 0x9F3c
     Write Stim 1 Data register -> Write Stim 8 Data Register
   + 0x9F40 - 0x9F54
     Write & Clear Stim 1 Data register -> Write & Clear Stim 8 Data Register

*** A whole lot of indecipherable MCS shit about ↑
    The data vector (000) is either a value with a 16 bit amplitude for DACs or
    16 bit Sideband Signal value for Sideband Channels. Bit 26 defines the
    timebase of this vector. A '0' defines that the value will be valid for one
    20 us frame until the number of repeats (bits 25­16) will be decreased by
    one. If bit 26 is '1' the value will be valid for 1000 times 20 us until the
    decrement will be done. Two kind of loops can be used. A single vector loop
    (001) and a long loop vector (010 in combination with 011) with two vectors
    keeping the information. For both types of loops the "number of repeats" are
    one based. Whereby a 0x1 will lead to ignore the vector and a 0x2 will
    repeat once. A value of 0x0 means to loop forever! The address offset is
    also one based. A 0x1 will jump backward on


** DAC Units
   The STG comes with 6 DACs, which in defaul configuration forms three pairs, each
   pair covering 30 electrodes each.
   This is the same as stating that the 60 electros is divided into two groups of
   electrodes, each group covered by 3 DACs.

   In this setup each DAC pair operates as one logic unit, such that the programmer
   only has to consider three DACs covering 60 electrodes, however if necessary
   each pair can be broken up allowing for 6 individual DACs, each DAC restricted
   to 30 electrodes.

   default configuration these six DACs are combined into three DAC pairs, so that
   each pair appear as a single DAC capable of stimulating all 60 electrodes.

   For advanced applications, these DAC pairs can be broken up, allowing
   stimulation with three DACs available for each block of 30 electrodes.
   DACs A, C and E are available for the lower 30 electrodes, while
   DACs B, D and F are available for the upper 30.
   In the default paired mode AB, CD and EF would be paired.

   When working independently, each DAC is assigned to its own stimulus pattern
   readout unit, leaving the two previously unused readout units to be shared
   amound the three sidebands.

   Interesting registers:
   + 0x91D0: DAC stimulus pattern memory block 
   + 0x91D4: DAC sideband pattern memory block

** Sideband data
   A Sideband has two responsibilities: Firstly, controlling the switches connecting the stimulation DACs to
   electrodes and controlling the Amplifier Protection("Blanking") of ADC data while a stimulus pulse
   is active.

   Secondly, the sideband can be utilized to send data to the USB, DSP or digital outputs on the IFB
   which are synchronous to the the running stimulation.

   For SHODAN, the latter is not a focus-area, so it will be ignored here.

   Each sideband controls electrodes with the following signals:
   * Bit 0: Amplifier Protection Switch on Headstage/Blanking
   * Bit 3: Stimulation Switch Close
   * Bit 4: Stimulus Selector Enable
   * Bit 8: List Mode config ID increment on/to the Interface Board or Bit 15­8 List Mode config
     ID when source of ID is switched to SB bits (TODO translate whatever the fuck this means)

   [[file:img/mcs_sideband.png]]
   The diagram shows an example stimulus pattern together with the sideband control signals.
   As shown in the drawing, the Stimulation switch can open with the end of the Stimulus.
   The Blanking signal should stay active for some additional time after stimulus is finished.
   Likewise, the Stimulation Selector should be kept for some additional time.
   20µs is recommended.

** Electrode Configuration
   Each electrode is assigned to one of the three DACs in its STG subsystem, or to an inactive
   ground state, controlled by the 'DAC Multiplexer' registers 0x9160 - 0x916C.

   the Stimulation Enable registers at 0x158­0x15C connects the DAC multiplexer output with the
   electrode.

   [[file:img/mcs_dac_multiplexer.png]]
   In this wildly uninformative diagram the stim mux is shown as the red line, and DAC assignment
   as blue.

   Electrodes can be in two modes, "manual" and "auto".
   In manual mode, each electrode will be configured only by the stimulus select and enable registers.
   In auto mode, the stimulus and enable mux are additionally controlled by its assigned sideband.
   When assigned to a sideband, an electrode can only emit stimuli it is enabled and the sideband
   switch close signal is high. Similarily, only when the sideband stim selector enable is high can
   an electrode be assigned a source from the DAC select register (no selection = GND).

   In default mode DAC pairs are assigned as
   * DAC pair AB - Sideband 1
   * DAC pair CD - Sideband 2
   * DAC pair EF - Sideband 3

   This can be configured in the sideband select registers (0x9154)
   
   In short:
   * Decide which electrodes should stimulate 
     Set the appropriate mode (auto/manual) at 0x9120 .., and enable registers at 0x9158 ..
   * Assign electrodes to stimulation channel 
     Connect the electrod to one of the DACs, using the DAC assign register at 0x9160 ..
   * Assign sidebands to stimulation channels 
     Assign sidebands using the sideband select register at 0x9154
   
   Here's a figure that will confuse the shit out of you:
   [[file:img/mcs_octopus_diagram.png]]
   
*** List mode
    More advanced stim control can be set up in list mode, this will be deciphered later.
    
** Trigger setup
*** Standard Trigger Setup 
    Three statemachines for controlling stimuli are implemented.
    In the default configuration each trigger controls two stimulus pattern
    readout units, one for sideband data and one for stimulus data, thus 
    controlling one stimulus routine.
    
    By assigining more than one DAC to the same trigger we can stimulate different
    sets of electrodes using the same sideband (thus sharing timing, but differing
    in data).
    
    A trigger can control many sidebands/stimulus patterns, allowing several
    stimuli/sideband configurations 

*** Incomprehensible
    An example where more than one
    DAC is assigned to one trigger is, when multiple electrodes are to be
    stimulated, grouped into two blocks, where each of the two blocks has a
    different stimulation signal amplitude. To accomplish this, two DACs can be
    assigned to one trigger. As long as the timing of the two stimulation patterns
    for two stimulus groups are the same, they can share one sideband resulting in a
    setup where one trigger controls two DACS and one sideband. When the two
    stimulation groups have differences in timing it is useful to use a seperate
    sidebands for each of these groups, thus resulting in a setup where one trigger
    controls two DACs and two sidebands. The assignment of the three DAC pairs and
    three sidebands to the three triggers within each block is controlled by
    registers 0x104 for the DACs and by register 0x108
    The assignment of the three DAC pairs and
    three sidebands to the three triggers within each block is controlled by
    registers 0x104 for the DACs and by register 0x108 for the sideband channels.
    With this setup the controlling trigger for each DAC and sideband has to be
    choosen. Start and Stop of the stimulation is always controlled at the level of
    the triggers, so that all DAC and sidebands which are grouped together to a
    specific trigger are started and keeped running in sync. Start Trigger For the
    trigger to work, the first bit(0) in the Trigger Control Register 1 (0x200) on
    the Interface board has to be set to 1. This enables the trigger event packet to
    propagate from the interface board to the stimulus generators. The Trigger ID
    registers (0x218 to 0x244) define for each trigger, which Stimulus­Pattern
    Memory­Segment to use when the corresponding trigger is startet. For single
    segment mode leave this register at the default value of 0. To actually start a
    trigger manually, write a "1" to the bit which corresponds the trigger number in
    the Trigger Event Status register 0x214. For example to manually start trigger
    1, write a value of 0x00000001 to register 0x214. To start a trigger with
    external signals or other sources a Digital Multiplexer for source select is
    implemented (0x280­0x2AC).

    
* An attempt to decipher writing of data
  In setup:
  
** SetSegment(0, 0)
   0x9200 <- 0


  
** SetSegment(1, 0)
   0x9220 <- 0

** uploadSine
   seems to be the outer loop. Keeps track of 
   + previous value
   + duration
   + datapoints
   + a volatile i
   + vectors used

*** ClearChannel(0)
    0x920c <- 0
   
*** for i in 1000:
    Seems to increment duration until it reaches stepsize
    When stepsize is reached, duration resets, and 
    vectors used is incremented in a sideeffect-tastic manner:
    
    vectors used += AddDataPoint(0, duration, yold + 0x8000) (0x8000 = 2¹⁶/2 aka 2¹⁵)
    I assume 0 is min, 2¹⁶ is max, thus 2¹⁵ is the zero voltage offset
    
    AddDatapoint:
    Checks the duration, then writes the data to the lower 2 bytes of
    0x9f20, and if duration is above 1000 sets the 26th bit, setting repeat time 1000 * 20µs
    0x9f20 is a FIFO it seems, so setting it should consume the data
    
    After the loop
    AddLoop is called
    AddLoop writes to 09f20, but only if repeats are requested.


* Tidbits
  the IRQ on data triggers at 50khz. bretty nice.
  

* On blanking
  In order to get test data for implementing stimuli a salt solution should be used (test this)
  
  A simple repeating test in salt lake is shown
  [[file:img/blank/1_setup.png]]
  
** With blanking and dedicated on the following is produced.
  [[file:img/blank/2blank_dedicated.png]]

** Without a dedicated electrode:

*** zoomed out
    [[file:img/blank/3blank_zoomed_out.png]]
  
*** zoomed in
    [[file:img/blank/4blank_no_zoom.png]]

** With a dedicated electrode and no blanking:
   [[file:img/blank/5dedicated_no_zoom.png]]
  
** With both turned off:
   [[file:img/blank/6neither.png]]

   For development the setting with no blanking and dedicated stimuli seems reasonable
  
** To achieve this the setup should be as follows
   [[file:img/blank/good2.png]]
  
   Only the two top rows are active, the lower half is for STG 2 in a 120 electrode setup
